###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:main]
use = egg:ccvpn

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_debugtoolbar

sqlalchemy.url = sqlite:///%(here)s/ccvpn.sqlite

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1

session.type = file
session.data_dir = %(here)s/.tmp/session_data
session.lock_dir = %(here)s/.tmp/session_lock
session.key = session
session.cookie_on_exception = true

# OpenVPN CA certificate to be embedded into .ovpn files
openvpn.ca-cert = %(here)s/ca.crt

# Bitcoin settings
# empty user = connect to local daemon
bitcoin.user =
bitcoin.password =
bitcoin.host = localhost
bitcoin.port = 8332
bitcoin.account = ccvpn2
bitcoin.month_price = 0.2

# Paypal settings
paypal.title = CCrypto VPN
#paypal.header_image = 
paypal.currency = EUR
paypal.address = paypal@ccrypto.org

# paypal.receiver will be used to check address when notified
# if you use a secondary address for paypal.address, put your primary here.
paypal.receiver = paypal@ccrypto.org

# Paypal sandbox API
paypal.test = true

[pshell]
m = ccvpn.models
dbs = ccvpn.models.DBSession

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, ccvpn, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_ccvpn]
level = DEBUG
handlers =
qualname = ccvpn

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
